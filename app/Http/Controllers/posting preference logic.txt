public function zone_pref_details_fetch(Request $request)
    {
       
        $id= auth()->user()->id;
        $user_type = Auth::user()->user_type;

       // $jo_code=$request->input('jo_code');

        //$jo_posting = array();

        $zone_pref_details['current_zone']= JudicialOfficerPosting:: join('court_complexes as cc','cc.id','=','judicial_officer_postings.court_complex_id')
                                                                    ->join('zones','zones.id','=','cc.zone_id')
                                                                    ->join('judicial_officers','judicial_officers.id','=','judicial_officer_postings.judicial_officer_id')
                                                                    ->where('judicial_officer_postings.judicial_officer_id',$id)
                                                                    ->orderBy('from_date', 'desc')
                                                                    ->select('zones.zone_name as zone_name','zones.id as zone_id','from_date as current_from_date', 'zones.min_service_days as min_service_days','judicial_officers.date_of_retirement as date_of_retirement')
                                                                    ->first();
        
//print_r($zone_pref_details);exit;
        if($zone_pref_details->isNotEmpty())
        {

            $previous_zone['just_prev_zone']= JudicialOfficerPosting:: join('court_complexes as cc','cc.id','=','judicial_officer_postings.court_complex_id')
                                                                ->join('zones','zones.id','=','cc.zone_id')
                                                                ->where([
                                                                    ['judicial_officer_postings.judicial_officer_id',$id],
                                                                    ['from_date','<',$zone_pref_details['current_zone']['current_from_date']]
                                                                        ])
                                                                ->orderBy('from_date', 'desc')
                                                                ->select('zones.zone_name as zone_name','zones.id as zone_id')
                                                                ->first();

            $zone_pref_details['current_zone']['current_from_date']= Carbon::parse ($zone_pref_details['current_zone']['current_from_date'])->format('d-m-Y'); 

            $today= strtotime(Carbon::today());
            $zone_service_duration =  $today - strtotime($zone_pref_details['current_zone']['current_from_date']) ;

            $years = floor($zone_service_duration / (365*60*60*24));
            $months = floor(($zone_service_duration - $years * 365*60*60*24) / (30*60*60*24));
            $posting_days_span = floor(($zone_service_duration - $years * 365*60*60*24 - $months*30*60*60*24)/ (60*60*24)); 


            $zone_pref_details['current_zone']['date_of_retirement']= Carbon::parse ($zone_pref_details['current_zone']['date_of_retirement'])->format('d-m-Y'); 
    
            $avail_last_posting =  $today - strtotime( $zone_pref_details['current_zone']['date_of_retirement']);
            
            $years = floor($avail_last_posting / (365*60*60*24));
            $months = floor(($avail_last_posting - $years * 365*60*60*24) / (30*60*60*24));
            $retirement_days_left = floor(($avail_last_posting - $years * 365*60*60*24 - $months*30*60*60*24)/ (60*60*24));              

        }
  
        //for first posting i.e zone_pref_details['current_zone']['current_from_date'] ==null, avail all zones
        if($zone_pref_details->isEmpty())
        {
            $zone_pref_details['zones']= Zone::orderBy('zone_name')
                                               ->get();
        }
        //for second posting in carrier i.e $previous_zone['just_prev_zone']['zone_id'] == null , exclude current zone & jusat next prioriy zone
        else if($zone_pref_details['just_prev_zone']->isEmpty()   &&  $posting_days_span >= $zone_pref_details['current_zone']['min_service_days'])
        {
            //can't avail just next priority zone 
            $exclude_next_zone_id= $previous_zone['current_zone']['zone_id'] +1;

            $zone_pref_details['zones']= Zone::where([
                                                    ['id','<>',$zone_pref_details['current_zone']['zone_id']],
                                                    ['id','<>',$exclude_next_zone_id]
                                                ])
                                                ->orderBy('zone_name')
                                                ->get();
        }       
         //for last posting {conditions: if minimum service days on current posting is over & (retiremet date - today) <= minimum service days on current posting }, avail all zones 
         if($posting_days_span >= $zone_pref_details['current_zone']['min_service_days'] && $zone_pref_details['current_zone']['min_service_days'] <= $retirement_days_left)
         {
            $zone_pref_details['zones']= Zone::orderBy('zone_name')
                                                ->get();
         }
        //for all other postings, exclude current zone and prevous zone
        else if($posting_days_span >= $zone_pref_details['current_zone']['min_service_days'])
        {
            $zone_pref_details['zones']= Zone::where([
                                                    ['id','<>',$zone_pref_details['current_zone']['zone_id']],
                                                    ['id','<>',$previous_zone['just_prev_zone']['zone_id']]
                                                ])
                                                ->orderBy('zone_name')
                                                ->get();
        }
        //
        else
        {
            $zone_pref_details['zones']=null;
        }
        

                return view('zone_pref_jr.index',compact('zone_pref_details'));
                //return($jo_posting);
    }